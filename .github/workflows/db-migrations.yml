name: DB Migrations on GitHub VM

on:
  push:
    paths:
      - 'db/updates/**'
    branches:
      - main
  workflow_dispatch:

jobs:
  migrate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout del repo
        uses: actions/checkout@v3

      - name: Instalar PostgreSQL y cliente
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql postgresql-client

      - name: Iniciar servicio PostgreSQL y preparar usuario/BD
        run: |
          sudo service postgresql start

          # 1) Crear usuario si no existe (SO-user postgres)
          sudo -u postgres psql -tc "SELECT 1 FROM pg_roles WHERE rolname='${{ secrets.DB_USER }}'" \
            | grep -q 1 || \
          sudo -u postgres psql -c "CREATE USER \"${{ secrets.DB_USER }}\" WITH PASSWORD '${{ secrets.DB_PASSWORD }}';"

          # 2) Crear base si no existe
          sudo -u postgres psql -tc "SELECT 1 FROM pg_database WHERE datname='${{ secrets.DB_NAME }}'" \
            | grep -q 1 || \
          sudo -u postgres psql -c "CREATE DATABASE \"${{ secrets.DB_NAME }}\" OWNER \"${{ secrets.DB_USER }}\";"

      - name: Ejecutar migraciones
        env:
          PGPASSWORD: ${{ secrets.DB_PASSWORD }}
        run: |
          for script in db/updates/*.sql; do
            echo "â†’ Aplicando $script"
            psql \
              -h localhost \
              -p ${{ secrets.DB_PORT }} \
              -U ${{ secrets.DB_USER }} \
              -d ${{ secrets.DB_NAME }} \
              -v ON_ERROR_STOP=1 \
              -f "$script"
          done

      - name: Verificar estado final
        env:
          PGPASSWORD: ${{ secrets.DB_PASSWORD }}
        run: |
          psql -h localhost -p ${{ secrets.DB_PORT }} -U ${{ secrets.DB_USER }} -d ${{ secrets.DB_NAME }} \
            -c "SELECT current_schema(), now();"
